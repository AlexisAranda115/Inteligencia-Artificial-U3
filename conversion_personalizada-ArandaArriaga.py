# -*- coding: utf-8 -*-
"""Conversion-Personalizada.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o-3cBjBcXCRDGtmslKc4si_3ZEFRD_R3
"""

# -*- coding: utf-8 -*-

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

# Datos de entrada y salida para la conversión de kilogramos a gramos
kilogramos = np.array([1, 0.5, 2, 1.5, 0.3], dtype=float)
gramos = kilogramos * 1000  # Convertir kilogramos a gramos

# Definir el modelo
capa = tf.keras.layers.Dense(units=1, input_shape=[1])
modelo = tf.keras.Sequential([capa])

# Compilar el modelo
modelo.compile(
    optimizer=tf.keras.optimizers.Adam(0.1),
    loss='mean_squared_error'
)

# Entrenar el modelo
print("Comenzando entrenamiento...")
historial = modelo.fit(kilogramos, gramos, epochs=1000, verbose=False)
print("Modelo entrenado!")

# Graficar la pérdida
plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
plt.xlabel("# Época")
plt.ylabel("Magnitud de pérdida")
plt.plot(historial.history["loss"])
plt.title("Conversión de Kilogramos a Gramos")

# Realizar una predicción
print("Realizar una predicción")
resultado = modelo.predict([0.5])
print("El resultado es " + str(resultado) + " gramos")

# Guardar el modelo
modelo.save('kilogramos_a_gramos.h5')

# Convertir el modelo a formato TensorFlow.js
!tensorflowjs_converter --input_format keras kilogramos_a_gramos.h5 Peso

# Mostrar el contenido del directorio
!ls Peso